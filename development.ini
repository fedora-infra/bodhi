[app:main]
use = egg:bodhi

##
## Messages
##

# A notice to flash on the front page
frontpage_notice =

# A notice to flash on the New Update page
newupdate_notice =

testing_approval_msg = This update has reached %d days in testing and can be pushed to stable now if the maintainer wishes
not_yet_tested_msg = This update has not yet met the minimum testing requirements defined in the <a href="https://fedoraproject.org/wiki/Package_update_acceptance_criteria">Package Update Acceptance Criteria</a>
stablekarma_comment = This update has reached the stable karma threshold and will be pushed to the stable updates repository


##
## Wiki Test Cases
##

## Query the wiki for test cases
query_wiki_test_cases = False
wiki_url = https://fedoraproject.org/w/api.php

# Email domain to prepend usernames to
default_email_domain = fedoraproject.org

# domain for generated message IDs
message_id_email_domain = admin.fedoraproject.org

##
## Mash settings
##

# The masher is a bodhi instance that is responsible for composing the update
# repositories, regenerating metrics, sending update notices, closing bugs,
# and other costly operations.  To set an external masher, set the masher to
# the baseurl of the bodhi instance.  If set to None, this bodhi instance
# will act as a masher as well.
#masher = None

# Where to initially mash repositories
mashed_dir = %(here)s/../mashed

# Where to move the verified composed repos after they are mashed
mashed_stage_dir = %(here)s/../mash/updates

mash_conf = %(here)s/config/mash.conf

createrepo_cache_dir = /var/tmp/createrepo

## Our periodic jobs
#jobs = clean_repo nagmail fix_bug_titles cache_release_data approve_testing_updates
jobs = cache_release_data refresh_metrics approve_testing_updates

## Comps configuration
comps_dir = /usr/share/bodhi/comps
comps_url = git://git.fedorahosted.org/comps.git

##
## Mirror settings
##
file_url = http://download.fedoraproject.org/pub/fedora/linux/updates
master_repomd = http://download.fedora.redhat.com/pub/fedora/linux/updates/%d/i386/repodata/repomd.xml
fedora_master_repomd = http://download.fedora.redhat.com/pub/fedora/linux/updates/%d/i386/repodata/repomd.xml
fedora_epel_master_repomd = http://download.fedora.redhat.com/pub/epel/%d/i386/repodata/repomd.xml

## The base url of this application
base_address = http://localhost:8084

## Supported update types
update_types = bugfix enhancement security newpackage

## Supported architechures
##
## To handle arch name changes between releases, you
## can also configure bodhi to support one arch *or*
## another. For example, EPEL5 mashes produce 'ppc'
## repos, where EPEL6 produces 'ppc64'. To handle this
## scenario, you can specify something like:
##
##   arches = ppc/ppc64
##
arches = i386 x86_64 ppc

##
## Contact setting
##

# The updates system itself.  This email address is used in fetching Bugzilla
# information, as well as email notifications
bodhi_email = None
bodhi_password = None

# The address that gets the requests
release_team_address = None

# The address to notify when security updates are initially added to bodhi
security_team = None

# Superuser groups
admin_groups = proventesters security_respons

# The email address of the proventesters
proventesters_email = proventesters-members@fedoraproject.org

# Where do we send update announcements to ?
# These variables should be named per: Release.prefix_id.lower()_announce_list
fedora_announce_list = None
fedora_test_announce_list = None
fedora_epel_announce_list = None
fedora_epel_test_announce_list = None

##
## TurboMail settings
##
mail.on = False
mail.server = None
mail.debug = False
mail.encoding = utf-8

# Exclude sending emails to these users
exclude_mail = autoqa

##
## Buildsystem settings
##

# What buildsystem do we want to use?  For development, we'll use a fake
# buildsystem that always does what we tell it to do.  For production, we'll
# want to use 'koji'.
buildsystem = dev

# Where we can find packages by /name/version/release/arch/
build_dir = %(here)s/../packages

# Koji's XML-RPC hub
koji_hub = https://koji.fedoraproject.org/kojihub

# Root url of the Koji instance to point to. No trailing slash
koji_url = http://koji.fedoraproject.org

# Koji certs
client_cert = None
clientca_cert = None
serverca_cert = None

##
## ACL system
## Choices are 'pkgdb', which will send a JSON query to the pkgdb_url below,
## or 'dummy', which will always return guest credentials (used for local
## development).
##
acl_system = dummy

##
## Package DB
##
pkgdb_url = https://admin.fedoraproject.org/pkgdb

# We used to get our package tags from pkgdb, but they come from tagger now.
# https://github.com/fedora-infra/fedora-tagger/pull/74
pkgtags_url = https://apps.fedoraproject.org/tagger/api/v1/tag/sqlitebuildtags/


##
## Bugzilla settings.
##

# The username/password for our bugzilla account comes
# from the bodhi_{email,password} fields.

bz_server = https://bugzilla.redhat.com/xmlrpc.cgi
bz_cookie = None
bz_buglink = https://bugzilla.redhat.com/show_bug.cgi?id=

# Bodhi will avoid touching bugs that are not against the following products
bz_products = Fedora,Fedora EPEL

##
## Packages that should suggest a reboot
##
reboot_pkgs = kernel kernel-smp kernel-xen-hypervisor kernel-PAE kernel-xen0 kernel-xenU kernel-xen kernel-xen-guest glibc hal dbus

##
## Critical Path Packages
## https://fedoraproject.org/wiki/Critical_path_package
##

# Enable this to query the Fedora Package Database for the list of Critical
# Path Packages.  If disabled, it'll just use the hardcoded list below.
critpath.type = pkgdb

# You can hardcode a list of critical path packages instead of using the PackageDB
#critpath_pkgs =

# The number of admin approvals it takes to be able to push a critical path
# update to stable for a pending release.
critpath.num_admin_approvals = 0

# The net karma required to submit a critial path update to a pending release)
critpath.min_karma = 2

# Allow critpath to submit for stable after 2 weeks with no negative karma
critpath.stable_after_days_without_negative_karma = 14

# The minimum amount of time an update must spend in testing before
# it can reach the stable repository
fedora.mandatory_days_in_testing = 7
fedora_epel.mandatory_days_in_testing = 14

##
## Release status
##

# Pre-beta enforces the Pre Beta policy defined here:
# https://fedoraproject.org/wiki/Updates_Policy
#f15.status = 'pre_beta'
#f15.pre_beta.mandatory_days_in_testing = 3
#f15.pre_beta.critpath.num_admin_approvals = 0
#f15.pre_beta.critpath.min_karma = 1

# For test cases.
f7.status = post_beta
f7.post_beta.mandatory_days_in_testing = 7
f7.post_beta.critpath.num_admin_approvals = 0
f7.post_beta.critpath.min_karma = 2

# The number of days worth of updates/comments to display
feeds.num_days_to_show = 7
feeds.max_entries = 20

##
## Buildroot Override
##

# Number of days before expiring overrides
buildroot_overrides.expire_after = 1

##
## Groups
##

# FAS Groups that we want to pay attention to
# When a user logs in, bodhi will look for any of these groups and associate #
# them with the user. They will then appear as the users effective principals in
# the format "group:groupname" and can be used in Pyramid ACE's.
important_groups = proventesters provenpackager releng security_respons packager bodhiadmin

# Groups that can push updates for any package
admin_packager_groups = provenpackager releng security_respons

# User must be a member of this group to submit updates
mandatory_packager_groups = packager

##
## Authentication & Authorization
##

# pyramid.openid
openid.success_callback = bodhi.security:remember_me
openid.provider = https://id.fedoraproject.org

# ACLs (dummy or pkgdb)
acl_system = dummy

##
## Pyramid settings
##
pyramid.reload_templates = true
pyramid.debug_authorization = true
pyramid.debug_notfound = true
pyramid.debug_routematch = true
pyramid.default_locale_name = en

# Temporarily comment out debugtoolbar since it can't handle Schrödinger’s Cat
#pyramid.includes =
#    pyramid_debugtoolbar
#    pyramid_tm
pyramid.includes =
    pyramid_tm

debugtoolbar.hosts = 127.0.0.1 ::1

##
## Database
##
sqlalchemy.url = sqlite:///%(here)s/bodhi.db

##
## Templates
##
mako.directories = bodhi:templates

# Authentication & Sessions
# CHANGE THESE IN PRODUCTION!
authtkt.secret = changethisinproduction!
session.secret = ChangeThisSecret!!1
authtkt.secure = false

# pyramid_beaker
session.type = file
session.data_dir = %(here)s/data/sessions/data
session.lock_dir = %(here)s/data/sessions/lock
session.key = mykey
session.cookie_on_exception = true
cache.regions = default_term, second, short_term, long_term
cache.type = memory
cache.second.expire = 1
cache.short_term.expire = 60
cache.default_term.expire = 300
cache.long_term.expire = 3600

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

# Begin logging configuration

[loggers]
keys = root, bodhi, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_bodhi]
level = DEBUG
handlers =
qualname = bodhi

[logger_sqlalchemy]
level = DEBUG
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
