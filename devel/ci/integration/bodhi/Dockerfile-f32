FROM bodhi-ci/f32
LABEL \
  name="bodhi-web" \
  vendor="Fedora Infrastructure" \
  maintainer="Aurelien Bompard <abompard@fedoraproject.org>" \
  license="MIT"

# For integration testing we're using the infrastructure repo
RUN curl -o /etc/yum.repos.d/infra-tags.repo https://pagure.io/fedora-infra/ansible/raw/master/f/files/common/fedora-infra-tags.repo

# Install Bodhi deps (that were not needed by the unittests container)
RUN dnf install -y \
    httpd \
    intltool \
    python3-mod_wsgi \
    python3-pip \
    skopeo \
    /usr/bin/koji

# Create bodhi user
RUN groupadd -r bodhi && \
    useradd  -r -s /sbin/nologin -d /home/bodhi/ -m -c 'Bodhi Server' -g bodhi bodhi
# Install it
RUN python3 setup.py build && pip3 install --no-use-pep517 .

# Configuration
RUN mkdir -p /etc/bodhi
COPY devel/ci/integration/bodhi/production.ini /etc/bodhi/production.ini
COPY devel/ci/integration/bodhi/celeryconfig.py /etc/bodhi/celeryconfig.py

COPY devel/ci/integration/bodhi/start.sh /etc/bodhi/start.sh
COPY devel/ci/integration/bodhi/fedora-messaging.toml /etc/fedora-messaging/config.toml
COPY devel/ci/integration/bodhi/httpd.conf /etc/bodhi/httpd.conf
COPY apache/bodhi.wsgi /etc/bodhi/bodhi.wsgi
RUN sed -i -e 's,/var/www,/httpdir,g' /etc/bodhi/bodhi.wsgi
COPY devel/ci/integration/bodhi/fedora-messaging.toml /etc/fedora-messaging/config.toml
# Composes
COPY devel/ci/integration/bodhi/pungi-call-dump.sh /etc/bodhi/pungi-call-dump.sh
COPY devel/ci/integration/bodhi/pungi.rpm.conf.j2 /etc/bodhi/pungi.rpm.conf.j2
COPY devel/ci/integration/bodhi/pungi.module.conf.j2 /etc/bodhi/pungi.module.conf.j2
COPY devel/ci/integration/bodhi/variants.rpm.xml.j2 /etc/bodhi/variants.rpm.xml.j2
COPY devel/ci/integration/bodhi/variants.module.xml.j2 /etc/bodhi/variants.module.xml.j2

RUN \
# Set up krb5
    rm -f /etc/krb5.conf && \
    ln -sf /etc/bodhi/krb5.conf /etc/krb5.conf && \
    ln -sf /etc/keytabs/koji-keytab /etc/krb5.bodhi_bodhi.fedoraproject.org.keytab

# Apache
RUN mkdir -p /httpdir && chown bodhi:bodhi /httpdir

# Tests tooling
COPY devel/ci/integration/bodhi/wait-for-file.py /usr/local/bin/wait-for-file
RUN chmod +x /usr/local/bin/wait-for-file
# Celery results
RUN mkdir -p /srv/celery-results && chown -R bodhi:bodhi /srv/celery-results
# Composes
RUN mkdir -p /srv/composes/final /srv/composes/stage && chown -R bodhi:bodhi /srv/composes

EXPOSE 8080
USER bodhi
ENV USER=bodhi
CMD ["bash", "/etc/bodhi/start.sh"]
